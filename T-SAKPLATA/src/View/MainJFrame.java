package View;

import Data.DBFake;
import Entity.Cheque;
import javax.swing.table.DefaultTableModel;
import Entity.Cliente;
import Entity.CuentaAhorro;
import Entity.CuentaCorriente;
import Entity.CuentaJoven;
import Entity.Historial;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

public class MainJFrame extends javax.swing.JFrame {
    private ArrayList<Cliente> allClientes = new ArrayList();
    private ArrayList<CuentaAhorro> allCuentasAhorro = new ArrayList();
    private ArrayList<CuentaCorriente> allCuentasCorriente = new ArrayList();
    private ArrayList<CuentaJoven> allCuentasJoven = new ArrayList();
    
    //private final ClienteController clieteControl;
    //private final CuentaController cuentaControl;
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        /* al usar db usar controller - por ahora recorrer arreglos
        this.clieteControl = new ClienteController(); 
        this.cuentaControl = new CuentaController();
        */
        initData(); //Chage the data.
        initDefaultGUI(); //inicialize jTexField, JButton, like default 
        chargeDataInComboBoxSearch(); 
        
          
        
        
        
        


        //jTabbedPanel.setVisible(false); juego de TabbedPanel mas adelate

        //------ set hide CtaCorriente texfield
        jLabelLineaCred.setVisible(false);
        jTextFieldLineaCred.setVisible(false);
        jTextFieldCheques.setVisible(false);
        jLabelCheque.setVisible(false);
        jPanelCheque.setVisible(false);
        // ------ set hide Monto 
        jLabelMonto.setVisible(false);
        jTextFieldMonto.setVisible(false);
        //----- sin cuenta

        jLabelSinCuenta.setVisible(false);
        jButtonDepositar.setVisible(false);
        jButtonRetirar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldRut = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNombres = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldApellidos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldFechaNac = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldEdad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldDomicilio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldFono = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldMail = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonNewSave = new javax.swing.JButton();
        jButtonEditCancel = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelTipo = new javax.swing.JLabel();
        jTextFieldTipoCta = new javax.swing.JTextField();
        jLabelNro = new javax.swing.JLabel();
        jLabelEstado = new javax.swing.JLabel();
        jTextFieldNumero = new javax.swing.JTextField();
        jTextFieldEstado = new javax.swing.JTextField();
        jLabelLineaCred = new javax.swing.JLabel();
        jTextFieldLineaCred = new javax.swing.JTextField();
        jLabelCheque = new javax.swing.JLabel();
        jTextFieldCheques = new javax.swing.JTextField();
        jLabelSaldo = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonDepositar = new javax.swing.JButton();
        jButtonRetirar = new javax.swing.JButton();
        jButtonNewCuenta = new javax.swing.JButton();
        jTextFieldSaldo = new javax.swing.JTextField();
        jTextFieldMonto = new javax.swing.JTextField();
        jLabelMonto = new javax.swing.JLabel();
        jLabelSinCuenta = new javax.swing.JLabel();
        jComboBoxTipoCuenta = new javax.swing.JComboBox<>();
        jTabbedPanel = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHistorial = new javax.swing.JTable();
        jPanelCheque = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCheque = new javax.swing.JTable();
        jButtonCheque = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboBoxSearch = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);
        setIconImages(null);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(270, 380));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Rut");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 35, -1, -1));

        jTextFieldRut.setEditable(false);
        jPanel1.add(jTextFieldRut, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 32, 120, -1));

        jLabel2.setText("Nombres");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 66, -1, -1));

        jTextFieldNombres.setEditable(false);
        jPanel1.add(jTextFieldNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 63, 120, -1));

        jLabel3.setText("Apellidos");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 97, -1, -1));

        jTextFieldApellidos.setEditable(false);
        jPanel1.add(jTextFieldApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 94, 120, -1));

        jLabel4.setText("Fecha Nac.");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 128, -1, -1));

        jTextFieldFechaNac.setEditable(false);
        jPanel1.add(jTextFieldFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 125, 120, -1));

        jLabel5.setText("Edad");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 159, -1, -1));

        jTextFieldEdad.setEditable(false);
        jPanel1.add(jTextFieldEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 156, 120, -1));

        jLabel6.setText("Domicilio");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 190, -1, -1));

        jTextFieldDomicilio.setEditable(false);
        jPanel1.add(jTextFieldDomicilio, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 187, 120, -1));

        jLabel7.setText("Fono");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 221, -1, -1));

        jTextFieldFono.setEditable(false);
        jPanel1.add(jTextFieldFono, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 218, 120, -1));

        jLabel8.setText("Mail");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 252, -1, -1));

        jTextFieldMail.setEditable(false);
        jPanel1.add(jTextFieldMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 249, 120, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 287, 204, 10));

        jButtonNewSave.setText("NewSave");
        jButtonNewSave.setMaximumSize(new java.awt.Dimension(78, 24));
        jButtonNewSave.setMinimumSize(new java.awt.Dimension(78, 24));
        jButtonNewSave.setPreferredSize(new java.awt.Dimension(78, 24));
        jButtonNewSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewSaveActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonNewSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 303, -1, -1));

        jButtonEditCancel.setText("EditCancel");
        jButtonEditCancel.setMaximumSize(new java.awt.Dimension(78, 24));
        jButtonEditCancel.setMinimumSize(new java.awt.Dimension(78, 24));
        jButtonEditCancel.setPreferredSize(new java.awt.Dimension(78, 24));
        jButtonEditCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEditCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 303, -1, -1));

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, -1, -1));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/img/bank_2_m.jpg"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cuenta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(270, 380));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTipo.setText("Tipo");
        jPanel2.add(jLabelTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 35, -1, -1));

        jTextFieldTipoCta.setEditable(false);
        jPanel2.add(jTextFieldTipoCta, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 32, 120, -1));

        jLabelNro.setText("Numero");
        jPanel2.add(jLabelNro, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 66, -1, -1));

        jLabelEstado.setText("Estado");
        jPanel2.add(jLabelEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 97, -1, -1));

        jTextFieldNumero.setEditable(false);
        jPanel2.add(jTextFieldNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 63, 120, -1));

        jTextFieldEstado.setEditable(false);
        jPanel2.add(jTextFieldEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 94, 120, -1));

        jLabelLineaCred.setText("Linea Credito");
        jPanel2.add(jLabelLineaCred, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 128, -1, -1));

        jTextFieldLineaCred.setEditable(false);
        jPanel2.add(jTextFieldLineaCred, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 125, 120, -1));

        jLabelCheque.setText("Cheques");
        jPanel2.add(jLabelCheque, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 159, -1, -1));

        jTextFieldCheques.setEditable(false);
        jPanel2.add(jTextFieldCheques, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 156, 120, -1));

        jLabelSaldo.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        jLabelSaldo.setText("Saldo");
        jPanel2.add(jLabelSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 203, -1, -1));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 287, 193, 10));

        jButtonDepositar.setText("Depositar");
        jButtonDepositar.setMaximumSize(new java.awt.Dimension(78, 24));
        jButtonDepositar.setMinimumSize(new java.awt.Dimension(78, 24));
        jButtonDepositar.setPreferredSize(new java.awt.Dimension(78, 24));
        jButtonDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDepositarActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonDepositar, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 303, -1, -1));

        jButtonRetirar.setText("Retirar");
        jButtonRetirar.setMaximumSize(new java.awt.Dimension(78, 24));
        jButtonRetirar.setMinimumSize(new java.awt.Dimension(78, 24));
        jButtonRetirar.setPreferredSize(new java.awt.Dimension(78, 24));
        jButtonRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRetirarActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonRetirar, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 303, -1, -1));

        jButtonNewCuenta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonNewCuenta.setText("Nueva Cuenta");
        jButtonNewCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewCuentaActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonNewCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, -1, -1));

        jTextFieldSaldo.setEditable(false);
        jTextFieldSaldo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel2.add(jTextFieldSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 204, 120, -1));
        jPanel2.add(jTextFieldMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 123, -1));

        jLabelMonto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelMonto.setText("jLabelMonto");
        jPanel2.add(jLabelMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 110, -1));

        jLabelSinCuenta.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelSinCuenta.setText("Cliente sin Cuenta");
        jPanel2.add(jLabelSinCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 120, -1));

        jComboBoxTipoCuenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ahorro", "Corriente", "Joven" }));
        jPanel2.add(jComboBoxTipoCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 120, -1));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Glosa", "Tipo", "Monto", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableHistorial.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTableHistorial);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 2, 570, 310));

        jTabbedPanel.addTab("Historial", jPanel3);

        jTableCheque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableCheque);

        jButtonCheque.setText("Crear Cheque");
        jButtonCheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChequeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelChequeLayout = new javax.swing.GroupLayout(jPanelCheque);
        jPanelCheque.setLayout(jPanelChequeLayout);
        jPanelChequeLayout.setHorizontalGroup(
            jPanelChequeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChequeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelChequeLayout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(jButtonCheque)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelChequeLayout.setVerticalGroup(
            jPanelChequeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelChequeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCheque)
                .addContainerGap())
        );

        jTabbedPanel.addTab("Cheques", jPanelCheque);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setText("Banco T-SAKPLATA");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Buscar:");

        jComboBoxSearch.setEditable(true);
        jComboBoxSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxSearch.setMaximumRowCount(10);
        jComboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jComboBoxSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(151, 151, 151))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchActionPerformed
        String rut = jComboBoxSearch.getSelectedItem().toString().split(" ")[0]; //nasty parse...ver como mejorar
        Cliente cliente = getClientebyRut(rut);
        setTexFieldCliente(cliente);  //pasar todo esto a un laod data
        switchBtnCliente("edit");
        setTexFieldCuenta(cliente);
        setTableHistorial(cliente);
        
        if(cliente.getTipoCuenta().equals("Corriente")){
            setTableCheque(cliente);
        }
        
             
        
   


    }//GEN-LAST:event_jComboBoxSearchActionPerformed

    private void jButtonEditCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditCancelActionPerformed
        if (this.jButtonEditCancel.getText().equals("Editar")) {
            this.jButtonNewSave.setText("Guardar");
            this.jButtonEditCancel.setText("Cancelar");
            this.switchTFieldldClient(true);
        } else { //cancel                              //pasar el cambio de botones a metodo
            this.jButtonNewSave.setText("Nuevo");
            this.jButtonEditCancel.setText("Editar");
            this.switchTFieldldClient(false);
           
        }
    }//GEN-LAST:event_jButtonEditCancelActionPerformed

    private void jButtonNewSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewSaveActionPerformed
        if (this.jButtonNewSave.getText().equals("Nuevo")) {
            this.clearTextFieldCliente();
            this.jButtonNewSave.setText("Guardar");
            this.jButtonEditCancel.setText("Cancelar");
            this.switchTFieldldClient(true);
        } else { //save
            this.jButtonNewSave.setText("Nuevo");
            this.jButtonEditCancel.setText("Editar");
            this.switchTFieldldClient(false);
            // NEW IF TFRut vacio ELSE update 
            //disable Cuenta
            //clear tablas
            //validar campos
            if( // not empty jTextField Cliente
                !jTextFieldRut.getText().isEmpty() && !jTextFieldNombres.getText().isEmpty() &&
                !jTextFieldApellidos.getText().isEmpty() && !jTextFieldFechaNac.getText().isEmpty() &&
                !jTextFieldDomicilio.getText().isEmpty() && !jTextFieldFono.getText().isEmpty() &&
                !jTextFieldMail.getText().isEmpty()){
                // todo ok vo dale
                boolean nuevo = false;
                
                if(getClientebyRutIndex(jTextFieldRut.getText()) == -1){  //unificar estos dos if
                    nuevo = true;
                }
//              
                if(nuevo){
                    Cliente cliente = new Cliente();
                    
                    cliente.setRut(jTextFieldRut.getText());
                    cliente.setNombres(jTextFieldNombres.getText());
                    cliente.setApellidos(jTextFieldApellidos.getText());
                    Date fechaNac = new Date(jTextFieldFechaNac.getText());
                    cliente.setFechaNac(fechaNac);
                    cliente.setDomicilio(jTextFieldDomicilio.getText());
                    cliente.setFono(Integer.parseInt(jTextFieldFono.getText()));
                    cliente.setMail(jTextFieldMail.getText());
                    cliente.setTipoCuenta("");
                    this.allClientes.add(cliente); // agregar a arreglo
                    setTexFieldCliente(cliente);
                    setTexFieldCuenta(cliente);
                    setTableHistorial(cliente);    

                }else{
                    Cliente cliente = allClientes.get(getClientebyRutIndex(jTextFieldRut.getText())); 
                    cliente.setRut(jTextFieldRut.getText());
                    cliente.setNombres(jTextFieldNombres.getText());
                    cliente.setApellidos(jTextFieldApellidos.getText());
                    Date fechaNac = new Date(jTextFieldFechaNac.getText());
                    cliente.setFechaNac(fechaNac);
                    cliente.setDomicilio(jTextFieldDomicilio.getText());
                    cliente.setFono(Integer.parseInt(jTextFieldFono.getText()));
                    cliente.setMail(jTextFieldMail.getText());
                    setTexFieldCliente(cliente);
                    setTexFieldCuenta(cliente);
                    setTableHistorial(cliente);
                    
                }

//                try{
//                    //cliente = getClientebyRut(jTextFieldRut.getText());
//                    cliente = allClientes.get(getClientebyRutIndex(jTextFieldRut.getText()));
//                }catch(ArrayIndexOutOfBoundsException e){
//                    cliente = new Cliente();
//                    nuevo = true;
//                }
//                
            }else{ // popup not empy
//                    JOptionPane.showMessageDialog();
            }

            
            
//            if(jTextFieldRut.getText().isEmpty()){
//                // NEW
//                
//                
//            }else{
//                Cliente cliente = allClientes.get(getClientebyRutIndex(jTextFieldRut.getText())); /// probar con solo getClientbyRut
//                cliente.setRut(jTextFieldRut.getText());
//                cliente.setNombres(jTextFieldNombres.getText());
//                cliente.setApellidos(jTextFieldApellidos.getText());
//                Date fechaNac = new Date(jTextFieldFechaNac.getText());
//                cliente.setFechaNac(fechaNac);
//                cliente.setDomicilio(jTextFieldDomicilio.getText());
//                cliente.setFono(Integer.parseInt(jTextFieldFono.getText()));
//                cliente.setMail(jTextFieldMail.getText());
//                setTexFieldCliente(cliente);
//                setTexFieldCuenta(cliente);
//                setTableHistorial(cliente);
//            }

            chargeDataInComboBoxSearch();
            initDefaultGUI();
            switchBtnCliente("edit");

            
        }
    }//GEN-LAST:event_jButtonNewSaveActionPerformed

    private void jButtonDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDepositarActionPerformed
        if (this.jButtonDepositar.getText().equals("Depositar")) {
            jTextFieldMonto.setText("");
            this.jLabelMonto.setVisible(true);
            this.jLabelMonto.setText("Monto Deposito");
            this.jTextFieldMonto.setVisible(true);
            this.jButtonDepositar.setText("OK");
            this.jButtonRetirar.setText("Cancelar");
        } else { //confirmar deposito/retiro
            //realizar el deposito/retiro
            Cliente cliente = getClientebyRut(jTextFieldRut.getText());
            int monto = Integer.parseInt(jTextFieldMonto.getText());
            System.out.println(monto);
            Historial historial;
            Date date = new Date();
            switch (cliente.getTipoCuenta()) {
                case "Ahorro":
                    {
                        if(jLabelMonto.getText().contains("Deposito")){
                            cliente.getCuentaAhorro().doAbono(monto);
                        }else{
                            cliente.getCuentaAhorro().doCarga(monto);
                        }
                        break;
                    }
                case "Corriente":
                    {
                        if(jLabelMonto.getText().contains("Deposito")){
                            cliente.getCuentaCorriente().doAbono(monto);
                        }else{
                            cliente.getCuentaCorriente().doCarga(monto);
                        }  
                        break;
                    }
                case "Joven":
                    {
                        if(jLabelMonto.getText().contains("Deposito")){
                            cliente.getCuentaJoven().doAbono(monto);
                        }else{
                            cliente.getCuentaJoven().doCarga(monto);
                        }
                        break;
                    }
                default:
                    break;
            }
            this.jLabelMonto.setVisible(false);
            this.jTextFieldMonto.setVisible(false);
            this.jButtonDepositar.setText("Depositar");
            this.jButtonRetirar.setText("Retirar");
            setTexFieldCliente(cliente);
            setTexFieldCuenta(cliente);
            setTableHistorial(cliente);

        }
    }//GEN-LAST:event_jButtonDepositarActionPerformed

    private void jButtonRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRetirarActionPerformed
        if (this.jButtonRetirar.getText().equals("Retirar")) {
            this.jLabelMonto.setVisible(true);
            this.jLabelMonto.setText("Monto Retiro");
            this.jTextFieldMonto.setVisible(true);
            this.jButtonDepositar.setText("OK");
            this.jButtonRetirar.setText("Cancelar");
        } else { //cancelar
            this.jLabelMonto.setVisible(false);
            this.jTextFieldMonto.setVisible(false);
            this.jButtonDepositar.setText("Depositar");
            this.jButtonRetirar.setText("Retirar");

        }
    }//GEN-LAST:event_jButtonRetirarActionPerformed

    private void jButtonNewCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewCuentaActionPerformed
        if(jButtonNewCuenta.getText().equals("Nueva Cuenta")){
            jComboBoxTipoCuenta.setVisible(true);
            jLabelSinCuenta.setText("Seleccione el Tipo");
            jButtonNewCuenta.setText("Crear Cuenta");
        }else{
            System.out.println(jComboBoxTipoCuenta.getSelectedItem().toString());
            String tipo = jComboBoxTipoCuenta.getSelectedItem().toString();
            Cliente cliente = getClientebyRut(jTextFieldRut.getText());
            cliente.setTipoCuenta(tipo);
            switch (tipo) {
                case "Ahorro":
                    {
                        CuentaAhorro cuenta = new CuentaAhorro(10, 1005, 0, true, "Cuenta Ahorro", cliente);
                        cliente.setCuentaAhorro(cuenta);
                        break;
                    }
                case "Corriente":
                    {
                        CuentaCorriente cuenta = new CuentaCorriente(500000,1005,0,true,"Cuenta Corriente",cliente);
                        cliente.setCuentaCorriente(cuenta);
                        break;
                    }
                case "Joven":
                    {
                        CuentaJoven cuenta = new CuentaJoven(1005,0,true,"Joven",cliente);
                        cliente.setCuentaJoven(cuenta);
                        break;
                    }
                default:
                    break;
            }
            
            chargeDataInComboBoxSearch();
            initDefaultGUI();
            setTexFieldCliente(cliente);
            setTexFieldCuenta(cliente);
            setTableHistorial(cliente);
            
            
        }
        
        
    }//GEN-LAST:event_jButtonNewCuentaActionPerformed

    private void jButtonChequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChequeActionPerformed
        Cliente cliente = getClientebyRut(jTextFieldRut.getText());
        Date date = new Date();
        // cambiar por una input de datos
        Cheque cheque = new Cheque(date,99, 1000, "Default Destinatario");
        cliente.getCuentaCorriente().addCheque(cheque);
        setTexFieldCliente(cliente);
        setTexFieldCuenta(cliente);
        setTableCheque(cliente);
        
        
    }//GEN-LAST:event_jButtonChequeActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        int index = getClientebyRutIndex(jTextFieldRut.getText());
        allClientes.remove(index);
        chargeDataInComboBoxSearch();
        
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    /* ############################### The GUI Magic ##################### */


    /* cambia editabe */
    void switchTFieldldClient(boolean b) {
        this.jTextFieldRut.setEditable(b);
        this.jTextFieldNombres.setEditable(b);
        this.jTextFieldApellidos.setEditable(b);
        this.jTextFieldFechaNac.setEditable(b);
        this.jTextFieldEdad.setEditable(b);
        this.jTextFieldDomicilio.setEditable(b);
        this.jTextFieldFono.setEditable(b);
        this.jTextFieldMail.setEditable(b);
    }



    /* ################################################################### */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCheque;
    private javax.swing.JButton jButtonDepositar;
    private javax.swing.JButton jButtonEditCancel;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonNewCuenta;
    private javax.swing.JButton jButtonNewSave;
    private javax.swing.JButton jButtonRetirar;
    private javax.swing.JComboBox<String> jComboBoxSearch;
    private javax.swing.JComboBox<String> jComboBoxTipoCuenta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCheque;
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JLabel jLabelLineaCred;
    private javax.swing.JLabel jLabelMonto;
    private javax.swing.JLabel jLabelNro;
    private javax.swing.JLabel jLabelSaldo;
    private javax.swing.JLabel jLabelSinCuenta;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelCheque;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPanel;
    private javax.swing.JTable jTableCheque;
    private javax.swing.JTable jTableHistorial;
    private javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldCheques;
    private javax.swing.JTextField jTextFieldDomicilio;
    private javax.swing.JTextField jTextFieldEdad;
    private javax.swing.JTextField jTextFieldEstado;
    private javax.swing.JTextField jTextFieldFechaNac;
    private javax.swing.JTextField jTextFieldFono;
    private javax.swing.JTextField jTextFieldLineaCred;
    private javax.swing.JTextField jTextFieldMail;
    private javax.swing.JTextField jTextFieldMonto;
    private javax.swing.JTextField jTextFieldNombres;
    private javax.swing.JTextField jTextFieldNumero;
    private javax.swing.JTextField jTextFieldRut;
    private javax.swing.JTextField jTextFieldSaldo;
    private javax.swing.JTextField jTextFieldTipoCta;
    // End of variables declaration//GEN-END:variables
    
    /* ############################### The GUI Magic ##################### */
    private void initData() {
        /* simulate db data */
        DBFake dbfake = new DBFake();
        this.allClientes = dbfake.getAllClientes();
        //this.allCuentasAhorro = dbfake.getAllCuentasAhorro();
        //this.allCuentasCorriente = dbfake.getAllCuentasCorriente();
        //this.allCuentasJoven = dbfake.getAllCuentasJoven();
    }

    private void initDefaultGUI() {
        switchBtnCliente("new-edit"); //set hide jbtn client guardar/cancelar
        switchBtnCuenta("init");
        jComboBoxTipoCuenta.setVisible(false);
        jButtonEliminar.setVisible(false);
        clearTextFieldCliente();
        clearTextFieldCuenta();
        chargeDataInComboBoxSearch();
        
    }

    private void chargeDataInComboBoxSearch() {
        /* charge combox search whith data */
        this.jComboBoxSearch.setModel(new DefaultComboBoxModel());
        // rut - 1nomre 1apellido - cuenta: for multi search ??????????
        for(Cliente c : this.allClientes){
            this.jComboBoxSearch.addItem((String) c.getRut()); // agregar Pnombre Papellido nemro cuents si tiene
        }
    }

    public void switchBtnCliente(String mode){
        /* set hide jbtn client guardar/cancelar */
        if(mode.equals("new-edit")){
            jButtonNewSave.setText("Nuevo");
            jButtonEditCancel.setText("Editar");
            jButtonEditCancel.setEnabled(false);
        }else if(mode.equals("edit")){ /* enable edit */
            jButtonEditCancel.setEnabled(true);
        }
    }
    
    public void switchBtnCuenta(String mode){
        switch (mode) {
        //
            case "init":
                break;
            case "hasCta":
                this.jButtonNewCuenta.setVisible(false);
                jLabelSinCuenta.setVisible(false);
                jButtonNewCuenta.setVisible(false);
                jLabelTipo.setVisible(true);
                this.jTextFieldTipoCta.setVisible(true);
                jLabelNro.setVisible(true);
                this.jTextFieldNumero.setVisible(true);
                jLabelEstado.setVisible(true);
                this.jTextFieldEstado.setVisible(true);
                jLabelSaldo.setVisible(true);
                this.jTextFieldSaldo.setVisible(true);
                jButtonDepositar.setVisible(true);
                jButtonRetirar.setVisible(true);
                break;
            case "noCta":
                jLabelSinCuenta.setVisible(true);
                jButtonNewCuenta.setVisible(true);
                jLabelTipo.setVisible(false);
                this.jTextFieldTipoCta.setVisible(false);
                jLabelNro.setVisible(false);
                this.jTextFieldNumero.setVisible(false);
                jLabelEstado.setVisible(false);
                this.jTextFieldEstado.setVisible(false);
                jLabelSaldo.setVisible(false);
                this.jTextFieldSaldo.setVisible(false);
                jLabelLineaCred.setVisible(false);
                jTextFieldLineaCred.setVisible(false);
                jTextFieldCheques.setVisible(false);
                jLabelCheque.setVisible(false);
                jButtonDepositar.setVisible(false);
                jButtonRetirar.setVisible(false);
                break;
            default:
                break;
        }

    }
            
    
    /* ##################### Controller ########################## */
    public Cliente getClientebyRut(String rut){
        Cliente cliente = null;
        for(Cliente c : this.allClientes){
            if(c.getRut().equals(rut)){
                cliente = c;
                break;
            }
        }
        return cliente;
    }
    
    public int getClientebyRutIndex(String rut){
        for(Cliente c : this.allClientes){
            if(c.getRut().equals(rut)){
                return this.allClientes.indexOf(c);            
            }
        }
        return -1;
    }



    
    /* ######################################################### */
    
    private void setTexFieldCliente(Cliente cliente) {
        this.jTextFieldRut.setText(cliente.getRut());
        this.jTextFieldNombres.setText(cliente.getNombres());
        this.jTextFieldApellidos.setText(cliente.getApellidos());
        this.jTextFieldFechaNac.setText(new SimpleDateFormat("yyyy/MM/dd").format(cliente.getFechaNac()));
        this.jTextFieldEdad.setText("000"); // crear funcion apara calcular la edad
        this.jTextFieldDomicilio.setText(cliente.getDomicilio());
        this.jTextFieldFono.setText(cliente.getFono());
        this.jTextFieldMail.setText(cliente.getMail());
    }
    
    private void setTexFieldCuenta(Cliente cliente) {
        switch (cliente.getTipoCuenta()) {
            case "Ahorro":
                switchBtnCuenta("hasCta");
                this.jTextFieldTipoCta.setText(cliente.getTipoCuenta());
                this.jTextFieldNumero.setText(cliente.getCuentaAhorro().getIdCuentaToString());
                this.jTextFieldEstado.setText(cliente.getCuentaAhorro().getEstado());
                this.jTextFieldSaldo.setText(Integer.toString(cliente.getCuentaAhorro().getSaldo()));
                //System.out.println(cliente.getCuentaAhorro().getSaldo());
                this.jLabelLineaCred.setVisible(false);
                this.jTextFieldLineaCred.setVisible(false);
                this.jTextFieldCheques.setVisible(false);
                this.jLabelCheque.setVisible(false);
                break;
            case "Corriente":
                switchBtnCuenta("hasCta");
                this.jTextFieldTipoCta.setText(cliente.getTipoCuenta());
                this.jTextFieldNumero.setText(cliente.getCuentaCorriente().getIdCuentaToString());
                this.jTextFieldEstado.setText(cliente.getCuentaCorriente().getEstado());
                this.jTextFieldSaldo.setText(Integer.toString(cliente.getCuentaCorriente().getSaldo()));
                this.jLabelLineaCred.setVisible(true);
                this.jTextFieldLineaCred.setVisible(true);
                this.jTextFieldCheques.setVisible(true);
                this.jLabelCheque.setVisible(true);
                this.jTextFieldLineaCred.setText(cliente.getCuentaCorriente().getLineaCreditoToString());
                String chequeCount = Integer.toString(cliente.getCuentaCorriente().getCheques().size());
                this.jTextFieldCheques.setText(chequeCount);
                break;
            case "Joven":
                switchBtnCuenta("hasCta");
                this.jTextFieldTipoCta.setText(cliente.getTipoCuenta());
                this.jTextFieldNumero.setText(cliente.getCuentaJoven().getIdCuentaToString());
                this.jTextFieldEstado.setText(cliente.getCuentaJoven().getEstado());
                this.jTextFieldSaldo.setText(Integer.toString(cliente.getCuentaJoven().getSaldo()));
                this.jLabelLineaCred.setVisible(false);
                this.jTextFieldLineaCred.setVisible(false);
                this.jTextFieldCheques.setVisible(false);
                this.jLabelCheque.setVisible(false);
                break;
            default:
                clearTextFieldCuenta();
                switchBtnCuenta("noCta");
                break;
        }
    }

    private void setTableHistorial(Cliente cliente) {
        DefaultTableModel modelJTableHistorial = (DefaultTableModel) jTableHistorial.getModel();
        Historial hs;
        switch (cliente.getTipoCuenta()) {
            case "Ahorro":
                modelJTableHistorial.setRowCount(0);
                for (int i = 0;i< cliente.getCuentaAhorro().getHistorial().size(); i++) {
                    hs = cliente.getCuentaAhorro().getHistorial().get(i);
                    Object[] row = {hs.getFecha(), hs.getGlosa(),hs.getTipo(),hs.getMonto(),hs.getSaldo()};
                    modelJTableHistorial.addRow(row);
                }
                break;
            case "Corriente":
                modelJTableHistorial.setRowCount(0);
                for (int i = 0;i< cliente.getCuentaCorriente().getHistorial().size(); i++) {
                    hs = cliente.getCuentaCorriente().getHistorial().get(i);
                    Object[] row = {hs.getFecha(), hs.getGlosa(),hs.getTipo(),hs.getMonto(),hs.getSaldo()};
                    modelJTableHistorial.addRow(row);
                }
                break;
            case "Joven":
                modelJTableHistorial.setRowCount(0);
                for (int i = 0;i< cliente.getCuentaJoven().getHistorial().size(); i++) {
                    hs = cliente.getCuentaJoven().getHistorial().get(i);
                    Object[] row = {hs.getFecha(), hs.getGlosa(),hs.getTipo(),hs.getMonto(),hs.getSaldo()};
                    modelJTableHistorial.addRow(row);
                }
                break;
            default:
                modelJTableHistorial.setRowCount(0);
                break;
        }

    }
    
    private void setTableCheque(Cliente cliente) {
        DefaultTableModel modeljTableCheque = (DefaultTableModel) jTableCheque.getModel();
        Cheque cq; 
        modeljTableCheque.setRowCount(0);
        for (int i = 0;i< cliente.getCuentaCorriente().getCheques().size(); i++) {
            cq = cliente.getCuentaCorriente().getCheques().get(i);
            Object[] row = {cq.getFecha(),cq.getNumero(),cq.getDestinatario(),cq.getMonto()};
            modeljTableCheque.addRow(row);
        }
        

    }

                /* ############################################# */
    /// -----------  test table -----------------
//    DefaultTableModel modelJTable3 = (DefaultTableModel) jTable3.getModel();
//    for (int i = 0;i< clienteControl.getAllCliente().size(); i++) {
//            Cliente cliente = clienteControl.getAllCliente().get(i);
//        Object[] row = {cliente.getRut(), cliente.getNombres(), cliente.getApellidos(), cliente.getFechaNac()};
//        modelJTable3.addRow(row);
//    }
//    /* ############################################# */
    void clearTextFieldCliente() {
        this.jTextFieldRut.setText("");
        this.jTextFieldNombres.setText("");
        this.jTextFieldApellidos.setText("");
        this.jTextFieldFechaNac.setText("");;
        this.jTextFieldEdad.setText("");
        this.jTextFieldDomicilio.setText("");;
        this.jTextFieldFono.setText("");
        this.jTextFieldMail.setText("");
    }

    void clearTextFieldCuenta() {
        this.jTextFieldTipoCta.setText("");
        this.jTextFieldNumero.setText("");
        this.jTextFieldEstado.setText("");
        this.jTextFieldLineaCred.setText("");
        this.jTextFieldCheques.setText("");
        this.jTextFieldSaldo.setText("");
    }





}



    /// esto esta feo - un arreglo para cada tipo de cuenta ??????
//    public Object getCuentabyRut(String rut) {  
//        for(Object c : this.allCuentas){
//            switch (c.getClass().getName()) {
//                case "Entity.CuentaAhorro":
//                    {
//                        CuentaAhorro cta = (CuentaAhorro) c;
//                        if(cta.getCliente().getRut().equals(rut)){
//                            return cta;
//                        }       break;
//                    }
//                case "Entity.CuentaCorriente":
//                    {
//                        CuentaCorriente cta = (CuentaCorriente) c;
//                        if(cta.getCliente().getRut().equals(rut)){
//                            return cta;
//                        }       break;
//                    }
//                case "Entity.Joven":
//                    {
//                        CuentaJoven cta = (CuentaJoven) c;
//                        if(cta.getCliente().getRut().equals(rut)){
//                            return cta;
//                        }       break;
//                    }
//                default:
//                    break;
//            }
//        }
//        return null;
//    }